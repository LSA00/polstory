spring:
  #thymeleaf 설정
  thymeleaf:
    characterEncoding: utf-8
    order: '0'
    cache: 'false'
    prefix: classpath:/templates/
    check-template-location: 'true'
    suffix: .html
  #datasource oracle cloud DB 설정
  datasource:
    driverClassName: oracle.jdbc.OracleDriver
    password: Pol20222022
    username: polstory
    url: jdbc:oracle:thin:@BasicKim?TNS_ADMIN=./src/main/resources/wallet
#security oauth 설정
  security:
    oauth2:
      client:
        registration:
          #oauth 구글 로그인 기본설정
          google:
            client-id: 651327539623-mlsck9srbcl0ih1ehe2gmdaihncre65j.apps.googleusercontent.com
            client-secret: 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
            scope:
            - email
            - profile

          naver:
            client-id: ATUE2EOZNDz_vQqBjQu0
            client-secret: AmO2yjjkI3
            scope:
            - name
            - email
            client-name: naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

            #네이버는 프로바이더 등록이 되어있지 않아서 설정을 해줘야함.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원 정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌
# facebook 로그인 구현 예정
#          facebook:
#            client-secret:
#            client-id:
#            scope:
#              - email
#              - public_profile
  #jpa 기본설정
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        validator:
          apply_to_ddl: 'true'
        format_sql: 'true'
        show_sql: 'true'
